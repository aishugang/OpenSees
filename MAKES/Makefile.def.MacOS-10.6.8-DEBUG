# OpenSees build out of source folder configuration:

# Project configuration:
PROJECT_ROOT        = /Users/lige/Develop/OpenSees
SRCdir              = $(PROJECT_ROOT)/SRC
BUILD_DIR           = $(PROJECT_ROOT)/MAKES/MacOS-10.6.8-DEBUG
OpenSees_PROGRAM    = $(BUILD_DIR)/bin/OpenSees

# Constants:
#OPERATING_SYSTEM = LINUX
OPERATING_SYSTEM    = MAC

#GRAPHICS = UsingOpenGL, UsingX11
GRAPHICS            = NONE

#PROGRAMMING_MODE = SEQUENTIAL, THREADS OR DISTRIBUTED_MPI
PROGRAMMING_MODE    = SEQUENTIAL

#COMPILER = GCC, KAI
COMPILER            = GCC

#DEBUG_MODE = DEBUG, NO_DEBUG
DEBUG_MODE          = DEBUG

#RELIABILITY = YES_RELIABILITY, NO_RELIABILITY
RELIABILITY         = NO_RELIABILITY

# Directories:
FE                  = $(BUILD_DIR)/SRC
BASE                = 
BLASdir             = $(BUILD_DIR)/OTHER/BLAS
CBLASdir            = $(BUILD_DIR)/OTHER/CBLAS
LAPACKdir           = $(BUILD_DIR)/OTHER/LAPACK
ARPACKdir           = $(BUILD_DIR)/OTHER/ARPACK
UMFPACKdir          = $(BUILD_DIR)/OTHER/UMFPACK
METISdir            = $(BUILD_DIR)/OTHER/METIS
SUPERLUdir          = $(BUILD_DIR)/OTHER/SuperLU_4.1/SRC
AMDdir              = $(BUILD_DIR)/OTHER/AMD 
DIRS                = $(BLASdir) \
                      $(CBLASdir) \
                      $(SUPERLUdir) \
                      $(LAPACKdir) \
                      $(ARPACKdir) \
                      $(UMFPACKdir) \
                      $(METISdir) \
                      $(FE)\
                      $(AMDdir) 

# Libraries:
FE_LIBRARY          = $(BUILD_DIR)/lib/libOpenSees.a
NDARRAY_LIBRARY     = $(BUILD_DIR)/lib/libndarray.a  # BJ_UCD jeremic@ucdavis.edu 
MATMOD_LIBRARY      = $(BUILD_DIR)/lib/libmatmod.a   # BJ_UCD jeremic@ucdavis.edu 
BJMISC_LIBRARY      = $(BUILD_DIR)/lib/libBJmisc.a  # BJ_UCD jeremic@ucdavis.edu
LAPACK_LIBRARY      = $(BUILD_DIR)/lib/libLapack.a
BLAS_LIBRARY        = $(BUILD_DIR)/lib/libBlas.a
SUPERLU_LIBRARY     = $(BUILD_DIR)/lib/libSuperLU.a
CBLAS_LIBRARY       = $(BUILD_DIR)/lib/libCBlas.a
ARPACK_LIBRARY      = $(BUILD_DIR)/lib/libArpack.a
UMFPACK_LIBRARY     = $(BUILD_DIR)/lib/libUmfpack.a
METIS_LIBRARY       = $(BUILD_DIR)/lib/libMetis.a
AMD_LIBRARY         = $(BUILD_DIR)/lib/libAMD.a 
# RELIABILITY_LIBRARY = 

# External libraries:
TCL_LIBRARY         = -framework Tcl -framework Tk
# GRAPHIC_LIBRARY     = 


WIPE_LIBS           = $(FE_LIBRARY) \
	                  $(RELIABILITY_LIBRARY)

CC++                = g++
CC                  = gcc
FC                  = gfortran
F90                 = 	
LINKER              = g++
AR		            = ar 
ARFLAGS	   	        = cq
RANLIB		        = ranlib
RANLIBFLAGS         = 
GRAPHIC_FLAG        = -D_NOGRAPHICS
PROGRAMMING_FLAG    = 
RELIABILITY_FLAG    =
C++FLAGS            = -Wall -g3 -D_LINUX -D_UNIX -D_MYSQL -D_TCL85 $(GRAPHIC_FLAG) $(RELIABILITY_FLAG)\
                      $(DEBUG_FLAG) $(PROGRAMMING_FLAG) -ffloat-store -D_HTTPS
CFLAGS              = -Wall -g3 -D_LINUX -D_UNIX -D_TCL85 $(GRAPHIC_FLAG) $(RELIABILITY_FLAG) \
                      $(DEBUG_FLAG) $(PROGRAMMING_FLAG) 
FFLAGS              = -Wall -g3 -D_LINUX -D_UNIX -D_TCL85 $(GRAPHIC_FLAG) $(RELIABILITY_FLAG) \
                      $(DEBUG_FLAG) $(PROGRAMMING_FLAG)
LINKFLAGS           = -rdynamic 
# Misc			     
MAKE                = make
CD                  = cd
ECHO                = echo
RM                  = rm
RMFLAGS             = -f
SHELL               = /bin/sh

# testdir:
# 	echo `pwd`
# 	echo $(PWD)
# 	echo $(subst $(BUILD_DIR), $(PROJECT_ROOT), $(PWD))

%.o: $(subst $(BUILD_DIR), $(PROJECT_ROOT), $(PWD))/%.cpp
	@$(ECHO) Making $@ from $<
	$(CC++) $(C++FLAGS) $(INCLUDES) -c $< -o $@

%.o: $(subst $(BUILD_DIR), $(PROJECT_ROOT), $(PWD))/%.C
	@$(ECHO) Making $@ from $<
	$(CC++) $(C++FLAGS) $(INCLUDES) -c $< -o $@ 

%.o: $(subst $(BUILD_DIR), $(PROJECT_ROOT), $(PWD))/%.c
	@$(ECHO) Making $@ from $<
	$(CC) $(CFLAGS) -c $< -o $@

%.o: $(subst $(BUILD_DIR), $(PROJECT_ROOT), $(PWD))/%.f
	@$(ECHO) Making $@ from $<
	$(FC) $(FFLAGS) -c $< -o $@

%.o: $(subst $(BUILD_DIR), $(PROJECT_ROOT), $(PWD))/%.f77
	@$(ECHO) Making $@ from $<
	$(FC) $(FFLAGS) -c $< -o $@

%.o: $(subst $(BUILD_DIR), $(PROJECT_ROOT), $(PWD))/%.f90
	@$(ECHO) Making $@ from $<
	$(FC90) $(FFLAGS) -c $< -o $@

MACHINE_INCLUDES        = -I/usr/local/BerkeleyDB.4.0/include -I/usr/local/mysql/include \
                          -I/usr/local/include \
                          -I$(SRCdir) \
                          -I$(PROJECT_ROOT)/OTHER/AMD \
                          -I$(PROJECT_ROOT)/OTHER/ARPACK \
                          -I$(PROJECT_ROOT)/OTHER/BLAS \
                          -I$(PROJECT_ROOT)/OTHER/CBLAS \
                          -I$(PROJECT_ROOT)/OTHER/ITPACK \
                          -I$(PROJECT_ROOT)/OTHER/LAPACK \
                          -I$(PROJECT_ROOT)/OTHER/METIS \
                          -I$(PROJECT_ROOT)/OTHER/SuperLU_4.1/SRC \
                          -I$(PROJECT_ROOT)/OTHER/UMFPACK \
                          -I/Library/Frameworks/Tcl.framework/Headers \
                          -I/Library/Frameworks/Tk.framework/Headers

# this file contains all the OpenSees/SRC includes
include $(FE)/Makefile.incl
INCLUDES                = $(MACHINE_INCLUDES) $(FE_INCLUDES)

MACHINE_LINKLIBS        = -L$(BUILD_DIR)/lib

MACHINE_NUMERICAL_LIBS  = $(ARPACK_LIBRARY) \
                          $(SUPERLU_LIBRARY) \
                          $(UMFPACK_LIBRARY) \
                          $(LAPACK_LIBRARY)  \
                          $(BLAS_LIBRARY) \
                          $(CBLAS_LIBRARY) \
                          $(GRAPHIC_LIBRARY)\
                          $(RELIABILITY_LIBRARY) \
                          $(AMD_LIBRARY)

MACHINE_SPECIFIC_LIBS   = -lssl -ldl -lm -lc \
                          -Wl,-rpath,/usr/local/lib \
                          -L/usr/local/lib \
                          /usr/local/lib/libgfortran.a \
                          /usr/local/lib/gcc/x86_64-apple-darwin10.7.0/4.6.0/libgcc.a \
                          /usr/local/lib/libquadmath.a \
                          /usr/local/lib/libjson_spirit.a
